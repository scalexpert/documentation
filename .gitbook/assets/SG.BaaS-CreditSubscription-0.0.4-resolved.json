{
  "openapi": "3.0.3",
  "info": {
    "title": "Credit Subscription - Core",
    "description": "The creditsubscription API is used **to initiate and manage a credit subscription** from the checkout page. According **the product code** your demand will be issued at the producer side.\n\nYou will obtain **a redirect Url or a Html page to the producer credit customer journey**.\n\nAt any time you can **retrieve the status and details** of your credit susbcription.\n",
    "version": "0.0.4"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/SG.BaaS/CreditSubscription/0.0.4",
      "description": "SwaggerHub API Auto Mocking"
    }
  ],
  "paths": {
    "/v1/subscriptions": {
      "get": {
        "tags": [
          "CreditSubscription"
        ],
        "summary": "Retrieve a list of credit subscriptions",
        "description": "You can list all **your subscriptions** by specifying **a reference** such as an order id or a basket id.\nthe response will contain subscription Id, dates, times, status, your references, amount financed ...\n\n**Main use case:** Use this API to retrieve status a credit subscription by refering an order Id or a basket Id. \n\n**Important:** The list is paginated \n",
        "operationId": "retrieveCreditSubscriptionForSpecificMerchant",
        "parameters": [
          {
            "name": "X-BAAS-APP-CLIENT-ID",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-BAAS-THIRD-PARTY-ID",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "merchantGlobalOrderId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "ID of the order as a whole - as long as the items are not dispatched separately, with different orders ID. Warning this parameter is exclusive with merchantBasketId",
              "example": "340005489"
            }
          },
          {
            "name": "merchantBasketId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "ID of the basket of the current transaction, as given by the merchant (thirdparty) Warning this parameter is exclusive with merchantGlobalOrderId",
              "example": "185462145"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "description": "The page number",
              "example": 1,
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "description": "The number of elements per page",
              "example": 20,
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of credit subscriptions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationCreditSubscriptionsResponse"
                }
              }
            }
          },
          "default": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                },
                "examples": {
                  "InternalServerError": {
                    "$ref": "#/components/examples/InternalServerErrorGetExample"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CreditSubscription"
        ],
        "summary": "Initiate a credit subscription at the credit producer side",
        "description": "**To initiate a credit subscription** you will have to complete the requested parameters from the context of your checkout page of which identity, address of the buyer, amount to be financed, credit payment choosen (product code), basket items details ...\nYou can refer your credit susbsription **with your order or basket id**. \nAs a result you will get a credit subscription Id and **a redirect URL or HMTL page** to credit customer journey managed at the producer side\n\n**Important**: the \"producerCode\" is the parameter that determine the **credit payment producer method** choosen by the buyer in the checkout page \n",
        "operationId": "initiateCreditSubscription",
        "parameters": [
          {
            "name": "X-BAAS-APP-CLIENT-ID",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-BAAS-THIRD-PARTY-ID",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Credit susbscription request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreditSubscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Initiate an credit subscription",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCreditSubscriptionResponse"
                }
              }
            }
          },
          "default": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                },
                "examples": {
                  "InternalServerError": {
                    "$ref": "#/components/examples/InternalServerErrorPostExample"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptions/kpi": {
      "get": {
        "tags": [
          "KPI"
        ],
        "summary": "Retrieve a credit subscription for a specific merchant within a specific period",
        "description": "This API is used to obtain a list of credit subscriptions by filtering on a period of dates or/and a market country code\n\n**Inportant**: this API is not exposed as open API to the merchant but only through merchant portal app.\n",
        "operationId": "retrieveCreditSubscriptionForKpiForSpecificMerchant",
        "parameters": [
          {
            "name": "X-BAAS-APP-CLIENT-ID",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-BAAS-THIRD-PARTY-ID",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "merchantGlobalOrderId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "ID of the order as a whole - as long as the items are not dispatched separately, with different orders ID. Warning this parameter is exclusive with merchantBasketId",
              "example": "340005489"
            }
          },
          {
            "name": "merchantBasketId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "ID of the basket of the current transaction, as given by the merchant (thirdparty) Warning this parameter is exclusive with merchantGlobalOrderId",
              "example": "185462145"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Period start date",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Period end date",
              "format": "date-time"
            }
          },
          {
            "name": "marketCode",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "description": "Filter on country codes",
              "example": "FR"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of credit subscriptions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditSubscriptionsResponse"
                }
              }
            }
          },
          "default": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                },
                "examples": {
                  "InternalServerError": {
                    "$ref": "#/components/examples/InternalServerErrorGetExample"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptions/{creditSubscriptionId}": {
      "get": {
        "tags": [
          "CreditSubscription"
        ],
        "summary": "Retrieve a specific credit subscription",
        "description": "You can use this API to get **all details** of a credit subscription. You will have to provide **a credit subscription Id** previously obtained as listed or initiated. \n",
        "operationId": "retrieveCreditSubscription",
        "parameters": [
          {
            "name": "creditSubscriptionId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "description": "The unique Credit Subscription Id",
              "format": "uuid"
            }
          },
          {
            "name": "X-BAAS-APP-CLIENT-ID",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-BAAS-THIRD-PARTY-ID",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Specific Credit subscription",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditSubscriptionResponse"
                }
              }
            }
          },
          "default": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                },
                "examples": {
                  "InternalServerError": {
                    "$ref": "#/components/examples/InternalServerErrorGetExample"
                  },
                  "NotFoundCreditSubscriptionIdGetErrorExample": {
                    "$ref": "#/components/examples/NotFoundCreditSubscriptionIdGetErrorExample"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptions/{creditSubscriptionId}/_update-status": {
      "post": {
        "tags": [
          "Status"
        ],
        "summary": "Update the status of the credit Subscription",
        "description": "This API is used to update the status of a subscription when an event occurs at producer level.\n\n**Inportant**: this API is not exposed as open API to the merchant but will serve for producer webhook endpoint to notify an event for updating the status\n",
        "operationId": "updateStatusOfCreditSubscription",
        "parameters": [
          {
            "name": "creditSubscriptionId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "description": "The unique Credit Subscription Id",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Datas required for update status of a Credit Subscription",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status of Credit subscription updated"
          },
          "default": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                },
                "examples": {
                  "InternalServerError": {
                    "$ref": "#/components/examples/InternalServerErrorPostExample"
                  },
                  "NotFoundCreditSubscriptionIdPostErrorExample": {
                    "$ref": "#/components/examples/NotFoundCreditSubscriptionIdPostErrorExample"
                  },
                  "BadRequestPostConsolidatedStatusErrorExample": {
                    "$ref": "#/components/examples/BadRequestPostConsolidatedStatusErrorExample"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateCreditSubscriptionRequest": {
        "required": [
          "basketDetails",
          "buyers",
          "financingMethodCode",
          "merchantBasketId",
          "merchantBuyerId",
          "merchantGlobalOrderId",
          "merchantUrls",
          "productLineCode"
        ],
        "type": "object",
        "properties": {
          "financingMethodCode": {
            "type": "string",
            "description": "ID of the BaaS product used",
            "example": "PSCFR3X"
          },
          "merchantBasketId": {
            "type": "string",
            "description": "ID of the basket of the current transaction, as given by the merchant (thirdparty)",
            "example": "647aeb24-a89c-11ed-afa1-0242ac120002"
          },
          "merchantGlobalOrderId": {
            "type": "string",
            "description": "ID of the order as a whole - as long as the items are not dispatched separately, with different orders ID (cf. basket table)",
            "example": "3e46d670-aca7-11ed-afa1-0242ac120002"
          },
          "merchantBuyerId": {
            "type": "string",
            "description": "ID of the buyer (final customer), as given by the merchant (thirdparty)",
            "example": "44226c6c-aca7-11ed-afa1-0242ac120002"
          },
          "merchantUrls": {
            "$ref": "#/components/schemas/MerchantUrls"
          },
          "buyers": {
            "type": "array",
            "description": "List of buyer",
            "items": {
              "$ref": "#/components/schemas/Buyer"
            }
          },
          "basketDetails": {
            "$ref": "#/components/schemas/BasketDetails"
          }
        }
      },
      "MerchantUrls": {
        "type": "object",
        "properties": {
          "confirmation": {
            "type": "string",
            "description": "URL, sended by the merchand at the start of the journey, to send back the buyer to his website upon finishing his credit journey",
            "format": "uri",
            "example": "https://mymerchand.domain/uri"
          }
        }
      },
      "Buyer": {
        "required": [
          "billingAddress",
          "billingContact",
          "deliveryAddress",
          "deliveryContact",
          "financedAmount"
        ],
        "type": "object",
        "properties": {
          "financedAmount": {
            "type": "number",
            "description": "total amount within the basket which is financed by credit - can represent the whole basket if every item is financed",
            "format": "float",
            "example": 119.9
          },
          "billingContact": {
            "$ref": "#/components/schemas/Contact"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "deliveryContact": {
            "$ref": "#/components/schemas/Contact"
          },
          "deliveryAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "contactAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "deliveryMethod": {
            "type": "string",
            "description": "The Delivery method",
            "example": "Click & Collect"
          },
          "birthName": {
            "type": "string",
            "description": "Birth name",
            "example": "Dupont"
          },
          "birthDate": {
            "type": "string",
            "description": "Birth date",
            "format": "date"
          },
          "birthCityName": {
            "type": "string",
            "description": "City of birth",
            "example": "Montpellier"
          },
          "birthCountryName": {
            "type": "string",
            "description": "Country of birth",
            "example": "France"
          },
          "lastDatePurchase": {
            "type": "string",
            "description": "last Date purchase",
            "format": "date"
          },
          "vip": {
            "type": "boolean",
            "description": "VIP",
            "example": false
          }
        }
      },
      "Address": {
        "required": [
          "cityName",
          "countryCode",
          "locationType",
          "regionName",
          "streetName",
          "streetNumber",
          "zipCode"
        ],
        "type": "object",
        "properties": {
          "locationType": {
            "$ref": "#/components/schemas/LocationTypeEnum"
          },
          "streetNumber": {
            "type": "integer",
            "description": "Numeric value in the street",
            "example": 147
          },
          "streetNumberSuffix": {
            "type": "string",
            "description": "when necessary, suffix of the street number (10 B)",
            "example": "B"
          },
          "streetName": {
            "type": "string",
            "description": "Name of the street",
            "example": "main street"
          },
          "streetNameComplement": {
            "type": "string",
            "description": "Complement when necessary to the name of the street",
            "example": "block 47"
          },
          "zipCode": {
            "type": "string",
            "description": "Zip code of address",
            "example": "92060"
          },
          "cityName": {
            "type": "string",
            "description": "Name of the city",
            "example": "Paris"
          },
          "regionName": {
            "type": "string",
            "description": "Region/area where the city is located.",
            "example": "Île-de-France"
          },
          "countryCode": {
            "type": "string",
            "description": "Name of the country",
            "example": "FR"
          }
        }
      },
      "LocationTypeEnum": {
        "type": "string",
        "description": "Type of usage of the location billingAddress, mainAddress, deliveryAddress, previousMainAddress.",
        "enum": [
          "billingAddress",
          "mainAddress",
          "deliveryAddress",
          "previousMainAddress"
        ]
      },
      "Contact": {
        "required": [
          "commonTitle",
          "email",
          "firstName",
          "lastName",
          "mobilePhoneNumber"
        ],
        "type": "object",
        "properties": {
          "lastName": {
            "type": "string",
            "description": "Last name of the buyer (final customer)",
            "example": "Dupont"
          },
          "firstName": {
            "type": "string",
            "description": "First name of the buyer (final customer)",
            "example": "Paul"
          },
          "commonTitle": {
            "type": "string",
            "description": "Civility of the buyer (final customer)",
            "enum": [
              "Mr.",
              "Mrs.",
              "Mx."
            ]
          },
          "email": {
            "pattern": "(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$",
            "type": "string",
            "description": "email adress of the buyer (final customer) with no international extension",
            "example": "paul.dupont@mail.com"
          },
          "mobilePhoneNumber": {
            "type": "string",
            "description": "Mobile number of the buyer (final customer) with no international extension",
            "format": "/^\\+(?:[0-9] ?){6,14}[0-9]$/",
            "example": "+484749393"
          },
          "professionalTitle": {
            "type": "string",
            "description": "Professional Title of the buyer in list Professor, Dr., KC, Eur Ing, Chancellor etc…",
            "example": "Professor"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number of the buyer (final customer) with no international extension",
            "format": "/^\\+(?:[0-9] ?){6,14}[0-9]$/",
            "example": "+484749393"
          }
        },
        "description": "Displaying the customer's personal contact details including first name, last name and mobile phone."
      },
      "BasketDetails": {
        "required": [
          "basketItems"
        ],
        "type": "object",
        "properties": {
          "basketItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BasketItem"
            }
          }
        },
        "description": "Providing details about the products selected by client in the basket from merchant portal such as main product,the total amount and quantity of the cart."
      },
      "BasketItem": {
        "required": [
          "brandName",
          "category",
          "currencyCode",
          "description",
          "id",
          "isFinanced",
          "label",
          "model",
          "orderId",
          "price",
          "quantity",
          "specifications"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of a specific item within the basket",
            "example": "M12345785513211"
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity of the item in the basket",
            "example": 1
          },
          "model": {
            "type": "string",
            "description": "Model of the item",
            "example": "5KPM5"
          },
          "label": {
            "type": "string",
            "description": "Label of a specific item within the basket",
            "example": "ROBOT PÂTISSIER À BOL RELEVABLE 4,8L - HEAVY DUTY 5KPM5"
          },
          "price": {
            "type": "number",
            "description": "Price of a specific item within the basket",
            "format": "float",
            "example": 1199.99
          },
          "currencyCode": {
            "type": "string",
            "description": "Currency code applying to prices based on ISO4217",
            "example": "EUR"
          },
          "orderId": {
            "type": "string",
            "description": "Id of the order of a specific item this applies if items are shipped separately and different order Ids are issued",
            "example": "OD456742"
          },
          "brandName": {
            "type": "string",
            "description": "Brand name of the item",
            "example": "KitchenAid"
          },
          "description": {
            "type": "string",
            "description": "Item commercial description",
            "example": "Le robot pâtissier à bol relevable très résistant idéal pour mixer de grandes quantités d'ingrédients, équipé d'un bol en acier inoxydable amovible."
          },
          "specifications": {
            "type": "string",
            "description": "Item specifications",
            "example": "Puissance (W) 315, Tension (V) 220-240, Fréquence (Hz) 50/60"
          },
          "category": {
            "type": "string",
            "description": "The categorie of the item",
            "example": "Small appliance"
          },
          "isFinanced": {
            "type": "boolean",
            "description": "Flag the item if it is financed by the credit",
            "example": true
          },
          "sku": {
            "type": "string",
            "description": "Item Stock Keeping Unit",
            "example": "ZG011AQA"
          }
        },
        "description": "Displaying the details of each product from shopping cart such as amount,quantity and product name."
      },
      "CreateCreditSubscriptionResponse": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique Credit Subscription Id",
            "format": "uuid",
            "example": "1b8cb15b-fbd3-4a65-9a39-ab81f6307b81"
          },
          "redirectionUrl": {
            "type": "string",
            "description": "Return URL from EPOS on initialization",
            "format": "uri",
            "example": "https://redirectionUrl/"
          },
          "redirectionPage": {
            "type": "string",
            "description": "Returns an HTML page",
            "example": "<html><head><title>Page Title</title></head><body></body></html>"
          }
        }
      },
      "CreditSubscriptionResponse": {
        "required": [
          "basketDetails",
          "buyer",
          "clientId",
          "consolidatedStatus",
          "creditSubscriptionId",
          "financingMethodCode",
          "installments",
          "lastUpdateTimestamp",
          "marketCode",
          "merchandId",
          "merchantBasketId",
          "merchantBuyerId",
          "merchantGlobalOrderId",
          "productLineCode",
          "registrationTimestamp"
        ],
        "type": "object",
        "properties": {
          "creditSubscriptionId": {
            "type": "string",
            "description": "The unique Credit Subscription Id",
            "format": "uuid"
          },
          "registrationTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdateTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "clientId": {
            "type": "string",
            "description": "Client ID is the technical account ID set into API platform and used by the merchant's marketplace to access to BAAS system.",
            "format": "uuid",
            "example": "44f5060e-a89c-11ed-afa1-0242ac120002"
          },
          "merchandId": {
            "type": "string",
            "description": "Merchant ID refers to the BAAS unique ID as thirdPartyRefID manage by the thirdPartyRef domain.",
            "format": "uuid",
            "example": "647aeb24-a89c-11ed-afa1-0242ac120002"
          },
          "financingMethodCode": {
            "type": "string",
            "description": "ID of the BaaS product used",
            "example": "PSCFR3X"
          },
          "productLineCode": {
            "type": "string",
            "description": "Smart Credit",
            "example": "SC"
          },
          "marketCode": {
            "type": "string",
            "description": "ID of the market in which the product is valid",
            "example": "FR"
          },
          "installments": {
            "type": "integer",
            "description": "Number of installments in months",
            "example": 3
          },
          "merchantBasketId": {
            "type": "string",
            "description": "ID of the basket of the current transaction, as given by the merchant (thirdparty)",
            "example": "647aeb24-a89c-11ed-afa1-0242ac120002"
          },
          "merchantGlobalOrderId": {
            "type": "string",
            "description": "ID of the order as a whole - as long as the items are not dispatched separately, with different orders ID (cf. basket table)",
            "example": "3e46d670-aca7-11ed-afa1-0242ac120002"
          },
          "merchantBuyerId": {
            "type": "string",
            "description": "ID of the buyer (final customer), as given by the merchant (thirdparty)",
            "example": "44226c6c-aca7-11ed-afa1-0242ac120002"
          },
          "consolidatedStatus": {
            "$ref": "#/components/schemas/ConsolidatedStatusEnum"
          },
          "buyer": {
            "$ref": "#/components/schemas/Buyer"
          },
          "basketDetails": {
            "$ref": "#/components/schemas/BasketDetails"
          }
        }
      },
      "CreditSubscriptionsResponse": {
        "required": [
          "subscriptions"
        ],
        "type": "object",
        "properties": {
          "subscriptions": {
            "type": "array",
            "description": "List of Subscription",
            "items": {
              "$ref": "#/components/schemas/CreditSubscription"
            }
          }
        }
      },
      "PaginationCreditSubscriptionsResponse": {
        "required": [
          "itemCount",
          "page",
          "pageSize",
          "subscriptions"
        ],
        "type": "object",
        "properties": {
          "itemCount": {
            "type": "integer",
            "example": 1
          },
          "page": {
            "type": "integer",
            "example": 1
          },
          "pageSize": {
            "type": "integer",
            "example": 20
          },
          "subscriptions": {
            "type": "array",
            "description": "List of Subscription",
            "items": {
              "$ref": "#/components/schemas/CreditSubscription"
            }
          }
        }
      },
      "CreditSubscription": {
        "required": [
          "buyerFinancedAmount",
          "consolidatedStatus",
          "creditSubscriptionId",
          "financingMethodCode",
          "installments",
          "lastUpdateTimestamp",
          "marketCode",
          "merchantBasketId",
          "merchantGlobalOrderId",
          "registrationTimestamp"
        ],
        "type": "object",
        "properties": {
          "creditSubscriptionId": {
            "type": "string",
            "description": "The unique Credit Subscription Id",
            "format": "uuid"
          },
          "registrationTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdateTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "financingMethodCode": {
            "type": "string",
            "description": "ID of the BaaS product used",
            "example": "PSCFR3X"
          },
          "marketCode": {
            "type": "string",
            "description": "ID of the market in which the product is valid",
            "example": "FR"
          },
          "installments": {
            "type": "integer",
            "description": "Number of installments in months",
            "example": 3
          },
          "merchantBasketId": {
            "type": "string",
            "description": "ID of the basket of the current transaction, as given by the merchant (thirdparty)",
            "example": "061be358-acb1-11ed-afa1-0242ac120002"
          },
          "merchantGlobalOrderId": {
            "type": "string",
            "description": "ID of the order as a whole - as long as the items are not dispatched separately, with different orders ID (cf. basket table)",
            "example": "0c34ab62-acb1-11ed-afa1-0242ac120002"
          },
          "buyerFinancedAmount": {
            "type": "number",
            "description": "Total amount within the basket which is financed by credit - can represent the whole basket if every item is financed",
            "format": "float",
            "example": 1199.99
          },
          "consolidatedStatus": {
            "$ref": "#/components/schemas/ConsolidatedStatusEnum"
          }
        }
      },
      "UpdateStatusRequest": {
        "required": [
          "consolidatedStatus"
        ],
        "type": "object",
        "properties": {
          "consolidatedStatus": {
            "$ref": "#/components/schemas/ConsolidatedStatusEnum"
          }
        }
      },
      "ConsolidatedStatusEnum": {
        "type": "string",
        "description": "Current status of the buyer (final customer) credit subscription",
        "enum": [
          "initialized",
          "requested",
          "pre-accepted",
          "accepted",
          "rejected",
          "aborded"
        ]
      },
      "GenericErrorResponse": {
        "title": "GenericErrorResponse",
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "description": "Timestamp of the error (ISO 8601 format)",
            "format": "date-time",
            "example": "2022-07-28T22:25:51Z"
          },
          "httpStatusCode": {
            "type": "integer",
            "description": "HTTP Status code (404, 400, 500...)",
            "example": 400
          },
          "httpStatusMessage": {
            "type": "string",
            "description": "HTTP status message",
            "example": "Bad Request"
          },
          "errorCode": {
            "type": "string",
            "description": "The applicative error code. It is a machine readable code. Used when BAD_REQUEST error to provide details about the error",
            "example": "INVALID_EMAIL"
          },
          "errorMessage": {
            "type": "string",
            "description": "The applicative error message. It is a human readable English message",
            "example": "The email address is not valid !"
          },
          "requestMethod": {
            "type": "string",
            "description": "HTTP verb used to make the request. GET, POST, PUT, DELETE...",
            "example": "GET"
          },
          "requestURI": {
            "type": "string",
            "description": "URI of the request",
            "example": "/v1/subscriptions"
          }
        }
      }
    },
    "parameters": {
      "CreditSubscriptionIdParam": {
        "name": "creditSubscriptionId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string",
          "description": "The unique Credit Subscription Id",
          "format": "uuid"
        }
      },
      "MerchantIdParam": {
        "name": "merchantId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string",
          "description": "MerchantId",
          "format": "uuid"
        }
      }
    },
    "examples": {
      "InternalServerErrorGetExample": {
        "summary": "Internal Server Error",
        "value": {
          "timestamp": "2022-07-28T22:25:51Z",
          "httpStatusCode": "500",
          "httpStatusMessage": "INTERNAL SERVEUR ERROR",
          "errorMessage": "Une erreur est survenue",
          "requestMethod": "GET",
          "requestURI": "/v1/subscription"
        }
      },
      "InternalServerErrorPostExample": {
        "summary": "Internal Server Error",
        "value": {
          "timestamp": "2022-07-28T22:25:51Z",
          "httpStatusCode": "500",
          "httpStatusMessage": "INTERNAL SERVEUR ERROR",
          "errorMessage": "Une erreur est survenue",
          "requestMethod": "POST",
          "requestURI": "/v1/subscription"
        }
      },
      "NotFoundCreditSubscriptionIdPostErrorExample": {
        "summary": "CreditSubscriptionId Not Found",
        "value": {
          "timestamp": "2022-07-28T22:25:51Z",
          "httpStatusCode": "404",
          "httpStatusMessage": "NOT FOUND",
          "errorCode": "CREDIT_SUBSCRIPTION_NOT_FOUND",
          "errorMessage": "The parameter `creditSubscriptionId` is unknowd",
          "requestMethod": "POST",
          "requestURI": "/v1/subscription"
        }
      },
      "NotFoundCreditSubscriptionIdGetErrorExample": {
        "summary": "CreditSubscriptionId Not Found",
        "value": {
          "timestamp": "2022-07-28T22:25:51Z",
          "httpStatusCode": "404",
          "httpStatusMessage": "NOT FOUND",
          "errorCode": "CREDIT_SUBSCRIPTION_NOT_FOUND",
          "errorMessage": "The parameter `creditSubscriptionId` is unknowd",
          "requestMethod": "GET",
          "requestURI": "/v1/subscription"
        }
      },
      "BadRequestPostConsolidatedStatusErrorExample": {
        "summary": "ConsolidatedStatus Bad Request",
        "value": {
          "timestamp": "2022-07-28T22:25:51Z",
          "httpStatusCode": "400",
          "httpStatusMessage": "BAD REQUEST",
          "errorCode": "MISSING DATA",
          "errorMessage": "The parameter `consolidatedStatus` is missing",
          "requestMethod": "POST",
          "requestURI": "/v1/subscription"
        }
      }
    }
  }
}